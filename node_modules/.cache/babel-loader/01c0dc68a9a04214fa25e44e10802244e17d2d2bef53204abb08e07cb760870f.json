{"ast":null,"code":"var _jsxFileName = \"/home/pravin/second/src/Demo.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Demo() {\n  const countries = ['india', 'australia', 'america'];\n  const results = [];\n  countries.forEach((country, index) => {\n    results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 17\n    }, this));\n  });\n  for (let country of countries) {\n    results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this));\n  }\n  for (let country in countries) {\n    results.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: countries[country]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: results\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this)\n\n  // <div>{results.length>0 ? results : <p>No data!!!</p>}</div>;\n  ;\n}\n_c = Demo;\nexport default Demo;\nvar _c;\n$RefreshReg$(_c, \"Demo\");","map":{"version":3,"names":["Demo","countries","results","forEach","country","index","push"],"sources":["/home/pravin/second/src/Demo.js"],"sourcesContent":["function Demo(){\n\n    const countries =['india','australia','america'];\n    const results=[];\n        countries.forEach((country,index)=>{\n            results.push(\n                <div key={index}>\n                \n                <p>{country}</p>\n                </div>\n            );\n        });\n  \n\n    for(let country of countries ){\n        results.push(\n            <div>\n            <p>{country}</p>\n            </div>\n        );\n    }\n\n    for(let country in countries ){\n        results.push(\n            <div>\n            <p>{countries[country]}</p>\n            </div>\n        );\n    }\n\nreturn (\n    <p>{results}</p>\n\n    // <div>{results.length>0 ? results : <p>No data!!!</p>}</div>;\n    )\n}\n\n\nexport default Demo;"],"mappings":";;AAAA,SAASA,IAAI,GAAE;EAEX,MAAMC,SAAS,GAAE,CAAC,OAAO,EAAC,WAAW,EAAC,SAAS,CAAC;EAChD,MAAMC,OAAO,GAAC,EAAE;EACZD,SAAS,CAACE,OAAO,CAAC,CAACC,OAAO,EAACC,KAAK,KAAG;IAC/BH,OAAO,CAACI,IAAI,eACR;MAAA,uBAEA;QAAA,UAAIF;MAAO;QAAA;QAAA;QAAA;MAAA;IAAK,GAFNC,KAAK;MAAA;MAAA;MAAA;IAAA,QAGT,CACT;EACL,CAAC,CAAC;EAGN,KAAI,IAAID,OAAO,IAAIH,SAAS,EAAE;IAC1BC,OAAO,CAACI,IAAI,eACR;MAAA,uBACA;QAAA,UAAIF;MAAO;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACV,CACT;EACL;EAEA,KAAI,IAAIA,OAAO,IAAIH,SAAS,EAAE;IAC1BC,OAAO,CAACI,IAAI,eACR;MAAA,uBACA;QAAA,UAAIL,SAAS,CAACG,OAAO;MAAC;QAAA;QAAA;QAAA;MAAA;IAAK;MAAA;MAAA;MAAA;IAAA,QACrB,CACT;EACL;EAEJ,oBACI;IAAA,UAAIF;EAAO;IAAA;IAAA;IAAA;EAAA;;EAEX;EAAA;AAEJ;AAAC,KAnCQF,IAAI;AAsCb,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}